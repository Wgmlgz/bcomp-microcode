#[cfg(test)]
mod tests {
    use duplicate::duplicate_item;

    use crate::{table::TABLE, Command};

    #[duplicate_item(
fn_name  address;
[cmd_01] [0x01];
[cmd_02] [0x02];
[cmd_03] [0x03];
[cmd_04] [0x04];
[cmd_05] [0x05];
[cmd_06] [0x06];
[cmd_07] [0x07];
[cmd_08] [0x08];
[cmd_09] [0x09];
[cmd_0a] [0x0a];
[cmd_0b] [0x0b];
[cmd_0c] [0x0c];
[cmd_0d] [0x0d];
[cmd_0e] [0x0e];
[cmd_0f] [0x0f];
[cmd_10] [0x10];
[cmd_11] [0x11];
[cmd_12] [0x12];
[cmd_13] [0x13];
[cmd_14] [0x14];
[cmd_15] [0x15];
[cmd_16] [0x16];
[cmd_17] [0x17];
[cmd_18] [0x18];
[cmd_19] [0x19];
[cmd_1a] [0x1a];
[cmd_1b] [0x1b];
[cmd_1c] [0x1c];
[cmd_1d] [0x1d];
[cmd_1e] [0x1e];
[cmd_1f] [0x1f];
[cmd_20] [0x20];
[cmd_21] [0x21];
[cmd_22] [0x22];
[cmd_23] [0x23];
[cmd_24] [0x24];
[cmd_25] [0x25];
[cmd_26] [0x26];
[cmd_27] [0x27];
[cmd_28] [0x28];
[cmd_29] [0x29];
[cmd_2a] [0x2a];
[cmd_2b] [0x2b];
[cmd_2c] [0x2c];
[cmd_2d] [0x2d];
[cmd_2e] [0x2e];
[cmd_2f] [0x2f];
[cmd_30] [0x30];
[cmd_31] [0x31];
[cmd_32] [0x32];
[cmd_33] [0x33];
[cmd_34] [0x34];
[cmd_35] [0x35];
[cmd_36] [0x36];
[cmd_37] [0x37];
[cmd_38] [0x38];
[cmd_39] [0x39];
[cmd_3a] [0x3a];
[cmd_3b] [0x3b];
[cmd_3c] [0x3c];
[cmd_3d] [0x3d];
[cmd_3e] [0x3e];
[cmd_3f] [0x3f];
[cmd_40] [0x40];
[cmd_41] [0x41];
[cmd_42] [0x42];
[cmd_43] [0x43];
[cmd_44] [0x44];
[cmd_45] [0x45];
[cmd_46] [0x46];
[cmd_47] [0x47];
[cmd_48] [0x48];
[cmd_49] [0x49];
[cmd_4a] [0x4a];
[cmd_4b] [0x4b];
[cmd_4c] [0x4c];
[cmd_4d] [0x4d];
[cmd_4e] [0x4e];
[cmd_4f] [0x4f];
[cmd_50] [0x50];
[cmd_51] [0x51];
[cmd_52] [0x52];
[cmd_53] [0x53];
[cmd_54] [0x54];
[cmd_55] [0x55];
[cmd_56] [0x56];
[cmd_57] [0x57];
[cmd_58] [0x58];
[cmd_59] [0x59];
[cmd_5a] [0x5a];
[cmd_5b] [0x5b];
[cmd_5c] [0x5c];
[cmd_5d] [0x5d];
[cmd_5e] [0x5e];
[cmd_5f] [0x5f];
[cmd_60] [0x60];
[cmd_61] [0x61];
[cmd_62] [0x62];
[cmd_63] [0x63];
[cmd_64] [0x64];
[cmd_65] [0x65];
[cmd_66] [0x66];
[cmd_67] [0x67];
[cmd_68] [0x68];
[cmd_69] [0x69];
[cmd_6a] [0x6a];
[cmd_6b] [0x6b];
[cmd_6c] [0x6c];
[cmd_6d] [0x6d];
[cmd_6e] [0x6e];
[cmd_6f] [0x6f];
[cmd_70] [0x70];
[cmd_71] [0x71];
[cmd_72] [0x72];
[cmd_73] [0x73];
[cmd_74] [0x74];
[cmd_75] [0x75];
[cmd_76] [0x76];
[cmd_77] [0x77];
[cmd_78] [0x78];
[cmd_79] [0x79];
[cmd_7a] [0x7a];
[cmd_7b] [0x7b];
[cmd_7c] [0x7c];
[cmd_7d] [0x7d];
[cmd_7e] [0x7e];
[cmd_7f] [0x7f];
[cmd_80] [0x80];
[cmd_81] [0x81];
[cmd_82] [0x82];
[cmd_83] [0x83];
[cmd_84] [0x84];
[cmd_85] [0x85];
[cmd_86] [0x86];
[cmd_87] [0x87];
[cmd_88] [0x88];
[cmd_89] [0x89];
[cmd_8a] [0x8a];
[cmd_8b] [0x8b];
[cmd_8c] [0x8c];
[cmd_8d] [0x8d];
[cmd_8e] [0x8e];
[cmd_8f] [0x8f];
[cmd_90] [0x90];
[cmd_91] [0x91];
[cmd_92] [0x92];
[cmd_93] [0x93];
[cmd_94] [0x94];
[cmd_95] [0x95];
[cmd_96] [0x96];
[cmd_97] [0x97];
[cmd_98] [0x98];
[cmd_99] [0x99];
[cmd_9a] [0x9a];
[cmd_9b] [0x9b];
[cmd_9c] [0x9c];
[cmd_9d] [0x9d];
[cmd_9e] [0x9e];
[cmd_9f] [0x9f];
[cmd_a0] [0xa0];
[cmd_a1] [0xa1];
[cmd_a2] [0xa2];
[cmd_a3] [0xa3];
[cmd_a4] [0xa4];
[cmd_a5] [0xa5];
[cmd_a6] [0xa6];
[cmd_a7] [0xa7];
[cmd_a8] [0xa8];
[cmd_a9] [0xa9];
[cmd_aa] [0xaa];
[cmd_ab] [0xab];
[cmd_ac] [0xac];
[cmd_ad] [0xad];
[cmd_ae] [0xae];
[cmd_af] [0xaf];
[cmd_b0] [0xb0];
[cmd_b1] [0xb1];
[cmd_b2] [0xb2];
[cmd_b3] [0xb3];
[cmd_b4] [0xb4];
[cmd_b5] [0xb5];
[cmd_b6] [0xb6];
[cmd_b7] [0xb7];
[cmd_b8] [0xb8];
[cmd_b9] [0xb9];
[cmd_ba] [0xba];
[cmd_bb] [0xbb];
[cmd_bc] [0xbc];
[cmd_bd] [0xbd];
[cmd_be] [0xbe];
[cmd_bf] [0xbf];
[cmd_c0] [0xc0];
[cmd_c1] [0xc1];
[cmd_c2] [0xc2];
[cmd_c3] [0xc3];
[cmd_c4] [0xc4];
[cmd_c5] [0xc5];
[cmd_c6] [0xc6];
[cmd_c7] [0xc7];
[cmd_c8] [0xc8];
[cmd_c9] [0xc9];
[cmd_ca] [0xca];
[cmd_cb] [0xcb];
[cmd_cc] [0xcc];
[cmd_cd] [0xcd];
[cmd_ce] [0xce];
[cmd_cf] [0xcf];
[cmd_d0] [0xd0];
[cmd_d1] [0xd1];
[cmd_d2] [0xd2];
[cmd_d3] [0xd3];
[cmd_d4] [0xd4];
[cmd_d5] [0xd5];
[cmd_d6] [0xd6];
[cmd_d7] [0xd7];
[cmd_d8] [0xd8];
[cmd_d9] [0xd9];
[cmd_da] [0xda];
[cmd_db] [0xdb];
[cmd_dc] [0xdc];
[cmd_dd] [0xdd];
[cmd_de] [0xde];
    )]
    #[test]
    fn fn_name() {
        let instr = &TABLE[address - 1];
        let command: Command = (instr.decoded).parse().unwrap();
        dbg!(Command::new(instr.encoded).cs());
        dbg!(command.cs());
        dbg!(&instr);
        assert_eq!(format!("{:x}", instr.encoded), format!("{:x}", command.cmd))
    }
}
