use wasm_bindgen::prelude::*;

#[wasm_bindgen(getter_with_clone)]
#[derive(Debug, Clone)]
pub struct Instruction {
    pub address: u8,
    pub encoded: u64,
    pub label: String,
    pub decoded: String,
}

#[wasm_bindgen]
impl Instruction {
    #[wasm_bindgen]
    pub fn new(address: u8, encoded: u64, label: &str, decoded: &str) -> Self {
        Self {
            address,
            encoded,
            label: label.into(),
            decoded: decoded.into(),
        }
    }
}
pub type Table = [Instruction; 0xff];

pub fn get_table() -> Vec<Instruction> { vec![
    Instruction::new(0x00,  0x0000000000,  "",       ""),
    Instruction::new(0x01,  0x00A0009004,  "INFETCH",       "IP → BR, AR"),
    Instruction::new(0x02,  0x0104009420,  "",       "BR + 1 → IP; MEM(AR) → DR"),
    Instruction::new(0x03,  0x0002009001,  "",       "DR → CR"),
    Instruction::new(0x04,  0x8109804002,  "",       "if CR(15) = 1 then GOTO CHKBR @ 09"),
    Instruction::new(0x05,  0x810C404002,  "",       "if CR(14) = 1 then GOTO CHKABS @ 0C"),
    Instruction::new(0x06,  0x810C204002,  "",       "if CR(13) = 1 then GOTO CHKABS @ 0C"),
    Instruction::new(0x07,  0x8078104002,  "",       "if CR(12) = 0 then GOTO ADDRLESS @ 78"),
    Instruction::new(0x08,  0x80C2101040,  "",       "GOTO IO @ C2"),
    Instruction::new(0x09,  0x800C404002,  "CHKBR",       "if CR(14) = 0 then GOTO CHKABS @ 0C"),
    Instruction::new(0x0A,  0x800C204002,  "",       "if CR(13) = 0 then GOTO CHKABS @ 0C"),
    Instruction::new(0x0B,  0x8157104002,  "",       "if CR(12) = 1 then GOTO BRANCHES @ 57"),
    Instruction::new(0x0C,  0x8024084002,  "CHKABS",       "if CR(11) = 0 then GOTO OPFETCH @ 24"),
    Instruction::new(0x0D,  0x0020011002,  "ADFETCH",       "extend sign CR(0..7) → BR"),
    Instruction::new(0x0E,  0x811C044002,  "",       "if CR(10) = 1 then GOTO T11XX @ 1C"),
    Instruction::new(0x0F,  0x0080009024,  "T10XX",       "BR + IP → AR"),
    Instruction::new(0x10,  0x0100000000,  "",       "MEM(AR) → DR"),
    Instruction::new(0x11,  0x8114024002,  "",       "if CR(9) = 1 then GOTO T101X @ 14"),
    Instruction::new(0x12,  0x81E0014002,  "T100X",       "if CR(8) = 1 then GOTO RESERVED @ E0"),
    Instruction::new(0x13,  0x8024101040,  "T1000",       "GOTO OPFETCH @ 24"),
    Instruction::new(0x14,  0x8119014002,  "T101X",       "if CR(8) = 1 then GOTO T1011 @ 19"),
    Instruction::new(0x15,  0x0001009401,  "T1010",       "DR + 1 → DR"),
    Instruction::new(0x16,  0x0200000000,  "",       "DR → MEM(AR)"),
    Instruction::new(0x17,  0x0001009201,  "",       "~0 + DR → DR"),
    Instruction::new(0x18,  0x8024101040,  "",       "GOTO OPFETCH @ 24"),
    Instruction::new(0x19,  0x0001009201,  "T1011",       "~0 + DR → DR"),
    Instruction::new(0x1A,  0x0200000000,  "",       "DR → MEM(AR)"),
    Instruction::new(0x1B,  0x8024101040,  "",       "GOTO OPFETCH @ 24"),
    Instruction::new(0x1C,  0x8120024002,  "T11XX",       "if CR(9) = 1 then GOTO T111X @ 20"),
    Instruction::new(0x1D,  0x81E0014002,  "T110X",       "if CR(8) = 1 then GOTO RESERVED @ E0"),
    Instruction::new(0x1E,  0x0001009028,  "T1100",       "BR + SP → DR"),
    Instruction::new(0x1F,  0x8024101040,  "",       "GOTO OPFETCH @ 24"),
    Instruction::new(0x20,  0x8023014002,  "T111X",       "if CR(8) = 0 then GOTO T1110 @ 23"),
    Instruction::new(0x21,  0x0001009020,  "T1111",       "BR → DR"),
    Instruction::new(0x22,  0x8028101040,  "",       "GOTO EXEC @ 28"),
    Instruction::new(0x23,  0x0001009024,  "T1110",       "BR + IP → DR"),
    Instruction::new(0x24,  0x8026804002,  "OPFETCH",       "if CR(15) = 0 then GOTO RDVALUE @ 26"),
    Instruction::new(0x25,  0x814A404002,  "",       "if CR(14) = 1 then GOTO CMD11XX @ 4A"),
    Instruction::new(0x26,  0x0080009001,  "RDVALUE",       "DR → AR"),
    Instruction::new(0x27,  0x0100000000,  "",       "MEM(AR) → DR"),
    Instruction::new(0x28,  0x813C804002,  "EXEC",       "if CR(15) = 1 then GOTO CMD1XXX @ 3C"),
    Instruction::new(0x29,  0x8130404002,  "CMD0XXX",       "if CR(14) = 1 then GOTO CMD01XX @ 30"),
    Instruction::new(0x2A,  0x812D104002,  "CMD000X",       "if CR(12) = 1 then GOTO OR @ 2D"),
    Instruction::new(0x2B,  0x0010C09811,  "AND",       "AC & DR → AC, N, Z, V"),
    Instruction::new(0x2C,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x2D,  0x0020009B11,  "OR",       "~AC & ~DR → BR"),
    Instruction::new(0x2E,  0x0010C09220,  "",       "~BR → AC, N, Z, V"),
    Instruction::new(0x2F,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x30,  0x8137204002,  "CMD01XX",       "if CR(13) = 1 then GOTO CMD011X @ 37"),
    Instruction::new(0x31,  0x8134104002,  "CMD010X",       "if CR(12) = 1 then GOTO ADC @ 34"),
    Instruction::new(0x32,  0x0010E09011,  "ADD",       "AC + DR → AC, N, Z, V, C"),
    Instruction::new(0x33,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x34,  0x8032011040,  "ADC",       "if PS(C) = 0 then GOTO ADD @ 32"),
    Instruction::new(0x35,  0x0010E09411,  "",       "AC + DR + 1 → AC, N, Z, V, C"),
    Instruction::new(0x36,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x37,  0x813A104002,  "CMD011X",       "if CR(12) = 1 then GOTO CMP @ 3A"),
    Instruction::new(0x38,  0x0010E09511,  "SUB",       "AC + ~DR + 1 → AC, N, Z, V, C"),
    Instruction::new(0x39,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x3A,  0x0000E09511,  "CMP",       "AC + ~DR + 1 → N, Z, V, C"),
    Instruction::new(0x3B,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x3C,  0x8143204002,  "CMD1XXX",       "if CR(13) = 1 then GOTO CMD101X @ 43"),
    Instruction::new(0x3D,  0x81E0104002,  "CMD100X",       "if CR(12) = 1 then GOTO RESERVED @ E0"),
    Instruction::new(0x3E,  0x0001009201,  "LOOP",       "~0 + DR → DR"),
    Instruction::new(0x3F,  0x0220009201,  "",       "~0 + DR → BR; DR → MEM(AR)"),
    Instruction::new(0x40,  0x80C4804020,  "",       "if BR(15) = 0 then GOTO INT @ C4"),
    Instruction::new(0x41,  0x0004009404,  "",       "IP + 1 → IP"),
    Instruction::new(0x42,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x43,  0x8146104002,  "CMD101X",       "if CR(12) = 1 then GOTO SWAM @ 46"),
    Instruction::new(0x44,  0x0010C09001,  "LD",       "DR → AC, N, Z, V"),
    Instruction::new(0x45,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x46,  0x0020009001,  "SWAM",       "DR → BR"),
    Instruction::new(0x47,  0x0001009010,  "",       "AC → DR"),
    Instruction::new(0x48,  0x0210C09020,  "",       "BR → AC, N, Z, V; DR → MEM(AR)"),
    Instruction::new(0x49,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x4A,  0x8153204002,  "CMD11XX",       "if CR(13) = 1 then GOTO ST @ 53"),
    Instruction::new(0x4B,  0x814E104002,  "CMD110X",       "if CR(12) = 1 then GOTO CALL @ 4E"),
    Instruction::new(0x4C,  0x0004009001,  "JUMP",       "DR → IP"),
    Instruction::new(0x4D,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x4E,  0x0020009001,  "CALL",       "DR → BR"),
    Instruction::new(0x4F,  0x0001009004,  "",       "IP → DR"),
    Instruction::new(0x50,  0x0004009020,  "",       "BR → IP"),
    Instruction::new(0x51,  0x0088009208,  "PUSHVAL",       "~0 + SP → SP, AR"),
    Instruction::new(0x52,  0x8055101040,  "",       "GOTO STORE @ 55"),
    Instruction::new(0x53,  0x0080009001,  "ST",       "DR → AR"),
    Instruction::new(0x54,  0x0001009010,  "",       "AC → DR"),
    Instruction::new(0x55,  0x0200000000,  "STORE",       "DR → MEM(AR)"),
    Instruction::new(0x56,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x57,  0x8171084002,  "BRANCHES",       "if CR(11) = 1 then GOTO BR1XXX @ 71"),
    Instruction::new(0x58,  0x8166044002,  "BR0XXX",       "if CR(10) = 1 then GOTO BR01XX @ 66"),
    Instruction::new(0x59,  0x8161024002,  "BR00XX",       "if CR(9) = 1 then GOTO BR001X @ 61"),
    Instruction::new(0x5A,  0x815F014002,  "BR000X",       "if CR(8) = 1 then GOTO BNE @ 5F"),
    Instruction::new(0x5B,  0x80C4041040,  "BEQ",       "if PS(Z) = 0 then GOTO INT @ C4"),
    Instruction::new(0x5C,  0x0020011002,  "BR",       "extend sign CR(0..7) → BR"),
    Instruction::new(0x5D,  0x0004009024,  "",       "BR + IP → IP"),
    Instruction::new(0x5E,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x5F,  0x805C041040,  "BNE",       "if PS(Z) = 0 then GOTO BR @ 5C"),
    Instruction::new(0x60,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x61,  0x8164014002,  "BR001X",       "if CR(8) = 1 then GOTO BPL @ 64"),
    Instruction::new(0x62,  0x815C081040,  "BMI",       "if PS(N) = 1 then GOTO BR @ 5C"),
    Instruction::new(0x63,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x64,  0x805C081040,  "BPL",       "if PS(N) = 0 then GOTO BR @ 5C"),
    Instruction::new(0x65,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x66,  0x816C024002,  "BR01XX",       "if CR(9) = 1 then GOTO BR011X @ 6C"),
    Instruction::new(0x67,  0x816A014002,  "BR010X",       "if CR(8) = 1 then GOTO BCC @ 6A"),
    Instruction::new(0x68,  0x815C011040,  "BCS",       "if PS(C) = 1 then GOTO BR @ 5C"),
    Instruction::new(0x69,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x6A,  0x805C011040,  "BCC",       "if PS(C) = 0 then GOTO BR @ 5C"),
    Instruction::new(0x6B,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x6C,  0x816F014002,  "BR011X",       "if CR(8) = 1 then GOTO BVC @ 6F"),
    Instruction::new(0x6D,  0x815C021040,  "BVS",       "if PS(V) = 1 then GOTO BR @ 5C"),
    Instruction::new(0x6E,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x6F,  0x805C021040,  "BVC",       "if PS(V) = 0 then GOTO BR @ 5C"),
    Instruction::new(0x70,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x71,  0x81E0044002,  "BR1XXX",       "if CR(10) = 1 then GOTO RESERVED @ E0"),
    Instruction::new(0x72,  0x81E0024002,  "BR10XX",       "if CR(9) = 1 then GOTO RESERVED @ E0"),
    Instruction::new(0x73,  0x8176014002,  "BR100X",       "if CR(8) = 1 then GOTO BGE @ 76"),
    Instruction::new(0x74,  0x806D081040,  "BLT",       "if PS(N) = 0 then GOTO BVS @ 6D"),
    Instruction::new(0x75,  0x806F101040,  "",       "GOTO BVC @ 6F"),
    Instruction::new(0x76,  0x806F081040,  "BGE",       "if PS(N) = 0 then GOTO BVC @ 6F"),
    Instruction::new(0x77,  0x806D101040,  "",       "GOTO BVS @ 6D"),
    Instruction::new(0x78,  0x81A4084002,  "ADDRLESS",       "if CR(11) = 1 then GOTO AL1XXX @ A4"),
    Instruction::new(0x79,  0x8189044002,  "AL0XXX",       "if CR(10) = 1 then GOTO AL01XX @ 89"),
    Instruction::new(0x7A,  0x817D024002,  "AL00XX",       "if CR(9) = 1 then GOTO AL001X @ 7D"),
    Instruction::new(0x7B,  0x80C4014002,  "AL000X",       "if CR(8) = 0 then GOTO INT @ C4"),
    Instruction::new(0x7C,  0x80DE101040,  "HLT",       "GOTO STOP @ DE"),
    Instruction::new(0x7D,  0x8183014002,  "AL001X",       "if CR(8) = 1 then GOTO AL0011 @ 83"),
    Instruction::new(0x7E,  0x8181801002,  "AL0010",       "if CR(7) = 1 then GOTO CMA @ 81"),
    Instruction::new(0x7F,  0x0010C00000,  "CLA",       "0 → AC, N, Z, V"),
    Instruction::new(0x80,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x81,  0x0010C09210,  "CMA",       "~AC → AC, N, Z, V"),
    Instruction::new(0x82,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x83,  0x8186801002,  "AL0011",       "if CR(7) = 1 then GOTO CMC @ 86"),
    Instruction::new(0x84,  0x0000200000,  "CLC",       "0 → C"),
    Instruction::new(0x85,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x86,  0x8184011040,  "CMC",       "if PS(C) = 1 then GOTO CLC @ 84"),
    Instruction::new(0x87,  0x0000208300,  "",       "HTOH(~0 + ~0) → C"),
    Instruction::new(0x88,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x89,  0x8196024002,  "AL01XX",       "if CR(9) = 1 then GOTO AL011X @ 96"),
    Instruction::new(0x8A,  0x8190014002,  "AL010X",       "if CR(8) = 1 then GOTO AL0101 @ 90"),
    Instruction::new(0x8B,  0x818E801002,  "AL0100",       "if CR(7) = 1 then GOTO ROR @ 8E"),
    Instruction::new(0x8C,  0x0010E60010,  "ROL",       "ROL(AC) → AC, N, Z, V, C"),
    Instruction::new(0x8D,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x8E,  0x0010F80010,  "ROR",       "ROR(AC) → AC, N, Z, V, C"),
    Instruction::new(0x8F,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x90,  0x8194801002,  "AL0101",       "if CR(7) = 1 then GOTO ASR @ 94"),
    Instruction::new(0x91,  0x0001009010,  "ASL",       "AC → DR"),
    Instruction::new(0x92,  0x0010E09011,  "",       "AC + DR → AC, N, Z, V, C"),
    Instruction::new(0x93,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x94,  0x0010E80010,  "ASR",       "ASR(AC) → AC, N, Z, V, C"),
    Instruction::new(0x95,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x96,  0x819C014002,  "AL011X",       "if CR(8) = 1 then GOTO AL0111 @ 9C"),
    Instruction::new(0x97,  0x819A801002,  "AL0110",       "if CR(7) = 1 then GOTO SWAB @ 9A"),
    Instruction::new(0x98,  0x0010C11010,  "SXTB",       "extend sign AC(0..7) → AC, N, Z, V"),
    Instruction::new(0x99,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x9A,  0x0010C06010,  "SWAB",       "SWAB(AC) → AC, N, Z, V"),
    Instruction::new(0x9B,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0x9C,  0x81A2801002,  "AL0111",       "if CR(7) = 1 then GOTO NEG @ A2"),
    Instruction::new(0x9D,  0x81A0401002,  "AL01110",       "if CR(6) = 1 then GOTO DEC @ A0"),
    Instruction::new(0x9E,  0x0010E09410,  "INC",       "AC + 1 → AC, N, Z, V, C"),
    Instruction::new(0x9F,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0xA0,  0x0010E09110,  "DEC",       "AC + ~0 → AC, N, Z, V, C"),
    Instruction::new(0xA1,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0xA2,  0x0010E09610,  "NEG",       "~AC + 1 → AC, N, Z, V, C"),
    Instruction::new(0xA3,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0xA4,  0x81B5044002,  "AL1XXX",       "if CR(10) = 1 then GOTO AL11XX @ B5"),
    Instruction::new(0xA5,  0x0080009008,  "AL10XX",       "SP → AR"),
    Instruction::new(0xA6,  0x0100000000,  "",       "MEM(AR) → DR"),
    Instruction::new(0xA7,  0x81AE024002,  "",       "if CR(9) = 1 then GOTO AL101X @ AE"),
    Instruction::new(0xA8,  0x81AC014002,  "AL100X",       "if CR(8) = 1 then GOTO POPF @ AC"),
    Instruction::new(0xA9,  0x0010C09001,  "POP",       "DR → AC, N, Z, V"),
    Instruction::new(0xAA,  0x0008009408,  "INCSP",       "SP + 1 → SP"),
    Instruction::new(0xAB,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0xAC,  0x0040009001,  "POPF",       "DR → PS"),
    Instruction::new(0xAD,  0x80AA101040,  "",  "GOTO INCSP @ AA",),
    Instruction::new(0xAE,  0x81B1014002,  "AL101X",       "if CR(8) = 1 then GOTO IRET @ B1"),
    Instruction::new(0xAF,  0x0004009001,  "RET",       "DR → IP"),
    Instruction::new(0xB0,  0x80AA101040,  "",       "GOTO INCSP @ AA"),
    Instruction::new(0xB1,  0x0040009001,  "IRET",       "DR → PS"),
    Instruction::new(0xB2,  0x0088009408,  "",       "SP + 1 → SP, AR"),
    Instruction::new(0xB3,  0x0100000000,  "",       "MEM(AR) → DR"),
    Instruction::new(0xB4,  0x80AF101040,  "",       "GOTO RET @ AF"),
    Instruction::new(0xB5,  0x81BB024002,  "AL11XX",       "if CR(9) = 1 then GOTO AL111X @ BB"),
    Instruction::new(0xB6,  0x81B9014002,  "AL110X",       "if CR(8) = 1 then GOTO PUSHF @ B9"),
    Instruction::new(0xB7,  0x0001009010,  "PUSH",       "AC → DR"),
    Instruction::new(0xB8,  0x8051101040,  "",       "GOTO PUSHVAL @ 51"),
    Instruction::new(0xB9,  0x0001009040,  "PUSHF",       "PS → DR"),
    Instruction::new(0xBA,  0x8051101040,  "",       "GOTO PUSHVAL @ 51"),
    Instruction::new(0xBB,  0x81E0014002,  "AL111X",       "if CR(8) = 1 then GOTO RESERVED @ E0"),
    Instruction::new(0xBC,  0x0080009008,  "SWAP",       "SP → AR"),
    Instruction::new(0xBD,  0x0100000000,  "",       "MEM(AR) → DR"),
    Instruction::new(0xBE,  0x0020009001,  "",       "DR → BR"),
    Instruction::new(0xBF,  0x0001009010,  "",       "AC → DR"),
    Instruction::new(0xC0,  0x0210C09020,  "",       "BR → AC, N, Z, V; DR → MEM(AR)"),
    Instruction::new(0xC1,  0x80C4101040,  "",       "GOTO INT @ C4"),
    Instruction::new(0xC2,  0x81C7084002,  "IO",       "if CR(11) = 1 then GOTO IRQ @ C7"),
    Instruction::new(0xC3,  0x0400000000,  "DOIO",       "IO"),
    Instruction::new(0xC4,  0x80DE801040,  "INT",       "if PS(W) = 0 then GOTO STOP @ DE"),
    Instruction::new(0xC5,  0x8001401040,  "",       "if PS(IRQ) = 0 then GOTO INFETCH @ 01"),
    Instruction::new(0xC6,  0x0800000000,  "",       "IRQSC"),
    Instruction::new(0xC7,  0x0088009208,  "IRQ",       "~0 + SP → SP, AR"),
    Instruction::new(0xC8,  0x0001009004,  "",       "IP → DR"),
    Instruction::new(0xC9,  0x0200000000,  "",       "DR → MEM(AR)"),
    Instruction::new(0xCA,  0x0088009208,  "",       "~0 + SP → SP, AR"),
    Instruction::new(0xCB,  0x0001009040,  "",       "PS → DR"),
    Instruction::new(0xCC,  0x0220001002,  "",       "LTOL(CR) → BR; DR → MEM(AR)"),
    Instruction::new(0xCD,  0x00A0020020,  "",       "SHL(BR) → BR, AR"),
    Instruction::new(0xCE,  0x0100000000,  "",       "MEM(AR) → DR"),
    Instruction::new(0xCF,  0x0004009001,  "",       "DR → IP"),
    Instruction::new(0xD0,  0x0080001420,  "",       "LTOL(BR + 1) → AR"),
    Instruction::new(0xD1,  0x0100000000,  "",       "MEM(AR) → DR"),
    Instruction::new(0xD2,  0x0040009001,  "",       "DR → PS"),
    Instruction::new(0xD3,  0x8001101040,  "",       "GOTO INFETCH @ 01"),
    Instruction::new(0xD4,  0x00BBE00000,  "START",       "0 → DR, CR, SP, AC, BR, AR, N, Z, V, C"),
    Instruction::new(0xD5,  0x80C3101040,  "",       "GOTO DOIO @ C3"),
    Instruction::new(0xD6,  0x0080009004,  "READ",       "IP → AR"),
    Instruction::new(0xD7,  0x0104009404,  "",       "IP + 1 → IP; MEM(AR) → DR"),
    Instruction::new(0xD8,  0x80DE101040,  "",       "GOTO STOP @ DE"),
    Instruction::new(0xD9,  0x0080009004,  "WRITE",       "IP → AR"),
    Instruction::new(0xDA,  0x0001009080,  "",       "IR → DR"),
    Instruction::new(0xDB,  0x0204009404,  "",       "IP + 1 → IP; DR → MEM(AR)"),
    Instruction::new(0xDC,  0x80DE101040,  "",       "GOTO STOP @ DE"),
    Instruction::new(0xDD,  0x0004009080,  "SETIP",       "IR → IP"),
    Instruction::new(0xDE,  0x4000000000,  "STOP",       "Halt"),
    Instruction::new(0xDF,  0x8001101040,  "",  "GOTO INFETCH @ 01",),
    Instruction::new(0xE0,  0x0000000000,  "RESERVED",  "",),
    Instruction::new(0xE1,  0x0000000000,  "",  "",),
    Instruction::new(0xE2,  0x0000000000,  "",  "",),
    Instruction::new(0xE3,  0x0000000000,  "",  "",),
    Instruction::new(0xE4,  0x0000000000,  "",  "",),
    Instruction::new(0xE5,  0x0000000000,  "",  "",),
    Instruction::new(0xE6,  0x0000000000,  "",  "",),
    Instruction::new(0xE7,  0x0000000000,  "",  "",),
    Instruction::new(0xE8,  0x0000000000,  "",  "",),
    Instruction::new(0xE9,  0x0000000000,  "",  "",),
    Instruction::new(0xEA,  0x0000000000,  "",  "",),
    Instruction::new(0xEB,  0x0000000000,  "",  "",),
    Instruction::new(0xEC,  0x0000000000,  "",  "",),
    Instruction::new(0xED,  0x0000000000,  "",  "",),
    Instruction::new(0xEE,  0x0000000000,  "",  "",),
    Instruction::new(0xEF,  0x0000000000,  "",  "",),
    Instruction::new(0xF0,  0x0000000000,  "",  "",),
    Instruction::new(0xF1,  0x0000000000,  "",  "",),
    Instruction::new(0xF2,  0x0000000000,  "",  "",),
    Instruction::new(0xF3,  0x0000000000,  "",  "",),
    Instruction::new(0xF4,  0x0000000000,  "",  "",),
    Instruction::new(0xF5,  0x0000000000,  "",  "",),
    Instruction::new(0xF6,  0x0000000000,  "",  "",),
    Instruction::new(0xF7,  0x0000000000,  "",  "",),
    Instruction::new(0xF8,  0x0000000000,  "",  "",),
    Instruction::new(0xF9,  0x0000000000,  "",  "",),
    Instruction::new(0xFA,  0x0000000000,  "",  "",),
    Instruction::new(0xFB,  0x0000000000,  "",  "",),
    Instruction::new(0xFC,  0x0000000000,  "",  "",),
    Instruction::new(0xFD,  0x0000000000,  "",  "",),
    Instruction::new(0xFE,  0x0000000000,  "",  "",),
    Instruction::new(0xFF,  0x0000000000,  "",  "",),
]}
